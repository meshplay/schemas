components:
  parameters:
    userId:
      name: user_id
      in: path
      description: User's user_id
      schema:
        type: string
      required: true

    id:
      name: id
      in: path
      description: Unique identifier
      schema:
        type: string
      required: true

    page:
      name: page
      in: query
      description: Get reponses by page
      schema:
        type: string

    page_size:  
      name: page_size
      in: query
      description: Get reponses by pageSize
      schema:
        type: string

    search:
      name: search
      in: query
      description: Get responses that match search param value
      schema:
        type: string

    order:
      name: order
      in: query
      description: Get ordered responses
      schema:
        type: string

    filter:
      name: filter
      in: query
      description: Get filtered reponses
      schema:
        type: string

    serverId:
      name: meshplayServerID
      in: path
      description: Meshplay server ID
      schema:
        $ref: ./core.yml#/components/schemas/id
      required: true

    instanceId:
      name: meshplayInstanceID
      in: path
      description: Meshplay instance ID
      schema:
        $ref: ./core.yml#/components/schemas/id
      required: true

    contextId:
      name: contextID
      in: path
      description: Meshplay context ID
      schema:
        $ref: ./core.yml#/components/schemas/id
      required: true

    isOAuth:
      name: isOAuth
      in: query
      description: To get OAuth tokens as well
      schema:
        type: string

    name:
      name: name
      in: query
      description: Name of the resource
      schema:
        type: string

    purpose:
      name: purpose
      in: query
      description: Purpose for which token is generated
      schema:
        type: string

    provider:
      name: provider
      in: query
      description: Remote provider
      schema:
        type: string
      required: true

    credentialId:
      name: credential_id
      in: query
      description: credential Id
      schema:
        type: string
      required: true

    eventsFilter:
      name: filter
      in: query
      description: Filter for retrieving events
      schema:
        type: object
        properties:
          provider:
            type: array
            items:
              type: string
          event_type:
            type: array
            items:
              type: string
      
    cumulative:
      name: cumulative
      in: query
      description: Cumulative events
      schema:
        type: string

    os:
      name: os
      in: query
      description: user's os
      schema:
        type: string

    playground:
      name: playground
      in: query
      description: Is playground mode
      schema:
        type: string

    meshplayVersion:
      name: meshplay-version
      in: path
      description: meshplay version
      schema:
        type: string
      required: true

    type:
      name: type
      in: query
      description: Type
      schema:
        type: string

    oamType: ## ??
      name: oamType
      in: query
      description: OAM type
      schema:
        type: string

    namespace:
      name: namespace
      in: query
      description: Namespace
      schema:
        type: string

    requestFilter:
      name: filter
      in: query
      description: Filter for catalog requests
      schema:
        properties:
          id:
            $ref: ./core.yml#/components/schemas/id
          status:
            type: array
            items:
              type: string

    connectionKind:
      name: connectionKind
      in: path
      description: 'Connection kind (eg: Meshplay)'
      required: true
      schema:
        type: string

    connectionId:
      name: connectionId
      in: path
      description: Meshplay Server Connection ID
      schema:
        $ref: ./core.yml#/components/schemas/id

    orgId:
      name: organizationId
      in: path
      description: Organization Id
      schema:
        type: string
      required: true

    planId:
      name: planID
      in: path
      description: Plan Id
      schema:
        type: string
      required: true

    resultID:
      name: resultID
      in: path
      description: Performance Result Id
      schema:
        type: string
      required: true

    status:
      name: status
      in: query
      description: Get models based on status, e.g 'ignored', 'registered'
      schema:
        type: string