// Package pattern provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package pattern

import (
	externalRef1 "github.com/meshplay/schemas/models/core"
	"github.com/meshplay/schemas/models/v1alpha2"
	"github.com/meshplay/schemas/models/v1beta1/component"
	"github.com/meshplay/schemas/models/v1alpha3/relationship"
)

// Defines values for MeshplayPatternCatalogDataClass.
const (
	Community MeshplayPatternCatalogDataClass = "community"
	Official  MeshplayPatternCatalogDataClass = "official"
	Verified  MeshplayPatternCatalogDataClass = "verified"
)

// Defines values for MeshplayPatternCatalogDataCompatibility.
const (
	Kubernetes MeshplayPatternCatalogDataCompatibility = "kubernetes"
)

// Defines values for MeshplayPatternCatalogDataType.
const (
	Deployment        MeshplayPatternCatalogDataType = "Deployment"
	Observability     MeshplayPatternCatalogDataType = "Observability"
	Resiliency        MeshplayPatternCatalogDataType = "Resiliency"
	Scaling           MeshplayPatternCatalogDataType = "Scaling"
	Security          MeshplayPatternCatalogDataType = "Security"
	TrafficManagement MeshplayPatternCatalogDataType = "Traffic-management"
	Troubleshooting   MeshplayPatternCatalogDataType = "Troubleshooting"
	Workloads         MeshplayPatternCatalogDataType = "Workloads"
)

// DeletePatternModel defines model for deletePatternModel.
type DeletePatternModel struct {
	ID   externalRef1.Id   `db:"id" json:"id"`
	Name externalRef1.Text `json:"name,omitempty"`
}

type PatternFile struct {
	Id externalRef1.Id  `json:"id,omitempty" yaml:"id,omitempty"`

	// Components List of component declarations
	Components []*component.ComponentDefinition `json:"components" yaml:"components"`

	// Name Name of the design; a descriptive, but concise title for the design document.
	Name string `json:"name" yaml:"name"`

	// Preferences Design-level preferences
	Preferences *struct {
		// Layers List of available layers
		Layers []string `json:"layers"`
	} `json:"preferences,omitempty"`

	// Relationships List of relationships between components
	Relationships []*relationship.RelationshipDefinition `json:"relationships" yaml:"relationships"`

	// SchemaVersion Specifies the version of the schema to which the design conforms.
	SchemaVersion string `json:"schemaVersion" yaml:"schemaVersion"`

	// Version Revision of the design as expressed by an auto-incremented, SemVer-compliant version number. May be manually set by a user or third-party system, but will always be required to be of version number higher than the previously defined version number.
	Version string `json:"version" yaml:"version"`
}

// MeshplayPattern defines model for meshplayPattern.
type MeshplayPattern struct {
	CatalogData *v1alpha2.CatalogData `json:"catalog_data,omitempty" yaml:"catalog_data"`
	CreatedAt externalRef1.Time      `json:"created_at,omitempty"`
	UserID    externalRef1.Id        `db:"user_id" json:"user_id"`
	Location  externalRef1.MapObject `json:"location,omitempty"`
	Name      externalRef1.Text      `json:"name,omitempty"`

	// PatternFile Designs are your primary tool for collaborative authorship of your infrastructure, workflow, and processes.
	PatternFile *PatternFile      `json:"pattern_file,omitempty" yaml:"pattern_file" gorm:"type:bytes;serializer:json"`
	UpdatedAt   externalRef1.Time `json:"updated_at,omitempty"`
	ID          externalRef1.Id   `db:"id" json:"id"`
	Visibility  externalRef1.Text `json:"visibility,omitempty"`
}

// MeshplayPatternCatalogDataClass Published content is classifed by its support level. Content classes help you understand the origin and expected support level for each piece of content. It is important to note that the level of support may vary within each class, and you should exercise discretion when using community-contributed content. Content produced and fully supported by Meshplay maintainers. This represents the highest level of support and is considered the most reliable. Content produced by partners and verified by Meshplay maintainers. While not directly maintained by Meshplay, it has undergone a verification process to ensure quality and compatibility. Content produced and supported by the respective project or organization responsible for the specific technology. This class offers a level of support from the project maintainers themselves. Content produced and shared by Meshplay users. This includes a wide range of content, such as performance profiles, test results, filters, patterns, and applications. Community content may have varying levels of support and reliability.
type MeshplayPatternCatalogDataClass string

// MeshplayPatternCatalogDataCompatibility defines model for MeshplayPattern.CatalogData.Compatibility.
type MeshplayPatternCatalogDataCompatibility string

// MeshplayPatternCatalogDataType Categorization of the type of design or operational flow depicted in this design.
type MeshplayPatternCatalogDataType string

// MeshplayPatternPage defines model for meshplayPatternPage.
type MeshplayPatternPage struct {
	Page       int               `json:"page,omitempty"`
	PageSize   int               `json:"page_size,omitempty"`
	Patterns   *[]MeshplayPattern `json:"patterns,omitempty"`
	ResultType string            `json:"resultType,omitempty"`
	TotalCount int               `json:"total_count,omitempty"`
}

// MeshplayPatternResource defines model for meshplayPatternResource.
type MeshplayPatternResource struct {
	CreatedAt externalRef1.Time `json:"created_at,omitempty"`
	Deleted   *bool             `json:"deleted,omitempty"`
	ID        externalRef1.Id   `db:"id" json:"id"`
	Name      externalRef1.Text `json:"name,omitempty"`
	Namepace  externalRef1.Text `json:"namepace,omitempty"`
	OamType   externalRef1.Text `json:"oam_type,omitempty"`
	Type      externalRef1.Text `json:"type,omitempty"`
	UpdatedAt externalRef1.Time `json:"updated_at,omitempty"`
	UserID    externalRef1.Id   `db:"user_id" json:"user_id"`
}

// MeshplayPatternResourcePage defines model for meshplayPatternResourcePage.
type MeshplayPatternResourcePage struct {
	Page       int                       `json:"page,omitempty"`
	PageSize   int                       `json:"page_size,omitempty"`
	Resources  *[]MeshplayPatternResource `json:"resources,omitempty"`
	ResultType string                    `json:"resultType,omitempty"`
	TotalCount int                       `json:"total_count,omitempty"`
}

// DesignShare defines model for designShare.
type DesignShare struct {
	ContentType string              `json:"content_type"`
	Emails      externalRef1.Emails `json:"emails"`
	ID          externalRef1.Id     `db:"id" json:"id"`
	Share       bool                `json:"share"`
}

// MeshplayPatternDeleteRequestBody defines model for meshplayPatternDeleteRequestBody.
type MeshplayPatternDeleteRequestBody struct {
	Patterns *[]DeletePatternModel `json:"patterns,omitempty"`
}

// MeshplayPatternRequestBody defines model for meshplayPatternRequestBody.
type MeshplayPatternRequestBody struct {
	Path        externalRef1.Text     `json:"path,omitempty"`
	PatternData *MeshplayPattern       `json:"pattern_data,omitempty"`
	Save        *bool                 `json:"save,omitempty"`
	Url         externalRef1.Endpoint `json:"url,omitempty"`
}
