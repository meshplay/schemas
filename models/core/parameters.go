// Package core provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package core

// ConnectionId defines model for connectionId.
type ConnectionId = Id

// ConnectionKind defines model for connectionKind.
type ConnectionKind = string

// ContextId defines model for contextId.
type ContextId = Id

// CredentialId defines model for credentialId.
type CredentialId = string

// Cumulative defines model for cumulative.
type Cumulative = string

// EventsFilter defines model for eventsFilter.
type EventsFilter struct {
	EventType *[]string `json:"event_type,omitempty"`
	Provider  *[]string `json:"provider,omitempty"`
}

// Filter defines model for filter.
type Filter = string

// InstanceId defines model for instanceId.
type InstanceId = Id

// IsOAuth defines model for isOAuth.
type IsOAuth = string

// MeshplayVersion defines model for meshplayVersion.
type MeshplayVersion = string

// Name defines model for name.
type Name = string

// Namespace defines model for namespace.
type Namespace = string

// OamType defines model for oamType.
type OamType = string

// Order defines model for order.
type Order = string

// OrganizationId defines model for organizationId.
type OrgId = string

// Os defines model for os.
type Os = string

// Page defines model for page.
type Page = string

// PageSize defines model for page_size.
type PageSize = string

// PlanId defines model for planId.
type PlanId = string

// Playground defines model for playground.
type Playground = string

// Purpose defines model for purpose.
type Purpose = string

// RequestFilter defines model for requestFilter.
type RequestFilter struct {
	ID     Id `db:"id" json:"id"`
	Status *[]string       `json:"status,omitempty"`
}

// ResultID defines model for resultID.
type ResultID = string

// Search defines model for search.
type Search = string

// ServerId defines model for serverId.
type ServerId = Id

// Type defines model for type.
type Type = string
